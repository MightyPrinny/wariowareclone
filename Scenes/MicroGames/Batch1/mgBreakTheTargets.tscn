[gd_scene load_steps=17 format=2]

[ext_resource path="res://Scenes/MicroGames/Batch1/mgBreakTheTargets.gd" type="Script" id=1]
[ext_resource path="res://GFX/BreakTheTargets/mario_pissing_bg.png" type="Texture" id=2]
[ext_resource path="res://Font/warioware-inc-font.tres" type="DynamicFont" id=3]
[ext_resource path="res://GFX/BreakTheTargets/target.png" type="Texture" id=4]
[ext_resource path="res://GFX/BreakTheTargets/pee_particle.png" type="Texture" id=5]

[sub_resource type="GDScript" id=8]
script/source = "extends Sprite

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"
var area
var health = 6
var creator = null

onready var particles:CPUParticles2D = $CPUParticles2D
onready var anim = $AnimationPlayer
var sfx_hit = AudioManager.get_sound_id(\"light-hit.wav\")
var sfx_explode =  AudioManager.get_sound_id(\"explosion.wav\")

# Called when the node enters the scene tree for the first time.
func _ready():
	area = $Area2D
	
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	if health > 0:
		var areas = area.get_overlapping_areas()
		for a in areas:
			if a.is_in_group(\"pee\"):
				a.get_parent().die(null)
				particles.emitting = true
				AudioManager.play_sfx(sfx_hit)
				if health > 0:
					health -=1
					if health <= 0:
						anim.play(\"explode\")
						AudioManager.play_sfx(sfx_explode)
						creator.target_destroyed()
						break
						
				
	pass
"

[sub_resource type="CircleShape2D" id=9]
radius = 9.0

[sub_resource type="Animation" id=10]
resource_name = "d"
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=11]
resource_name = "explode"
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 1, 2, 3, 4, 5 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}

[sub_resource type="Gradient" id=12]
offsets = PoolRealArray( 0.534351, 0.992366, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )

[sub_resource type="Animation" id=13]
resource_name = "d"
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=14]
resource_name = "reveal"
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.7 ),
"transitions": PoolRealArray( 2, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 320, 0 ) ]
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 1.3 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "_force_microgame_end"
} ]
}

[sub_resource type="GDScript" id=6]
script/source = "extends Sprite

var spd = 3
var grav = 3*60
var game_speed = 1.0
var base = null
var velocity = Vector2()
var is_base = -1


# Called when the node enters the scene tree for the first time.
func _ready():
	$Area2D.connect(\"body_entered\",self,\"die\")
	set_process(true)
	visible = true
	$AnimationPlayer.play(\"d\")
	pass # Replace with function body.

func die(b):
	queue_free()

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	if is_base == -1 :
		is_base = 0
		if self == base:
			set_process(false)
			$AnimationPlayer.stop()
			visible = false
			is_base = 1
			return
	
	velocity.y += grav*delta*game_speed
	position = position+velocity*delta*game_speed

	if position.y > 160:
		die(null)
"

[sub_resource type="CircleShape2D" id=7]
radius = 3.0

[sub_resource type="Animation" id=15]
length = 0.2
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0, 1 ]
}

[sub_resource type="RectangleShape2D" id=16]
extents = Vector2( 8, 8 )

[node name="mgBreakTheTargets" type="Node2D"]
position = Vector2( 320, 0 )
scale = Vector2( 2, 2 )
script = ExtResource( 1 )

[node name="mario_pissing_bg" type="Sprite" parent="."]
editor/display_folded = true
position = Vector2( -160, 0 )
texture = ExtResource( 2 )
centered = false
__meta__ = {
"_edit_lock_": true
}

[node name="Label" type="Label" parent="mario_pissing_bg"]
margin_left = 287.299
margin_top = 3.69598
margin_right = 327.299
margin_bottom = 46.696
custom_fonts/font = ExtResource( 3 )
text = "0
"
align = 1

[node name="Label2" type="Label" parent="mario_pissing_bg"]
margin_left = 228.454
margin_top = 1.7289
margin_right = 297.454
margin_bottom = 44.7289
custom_fonts/font = ExtResource( 3 )
text = "Remaining :
"
align = 1

[node name="target" type="Sprite" parent="." groups=[
"target",
]]
editor/display_folded = true
position = Vector2( -96, 176 )
texture = ExtResource( 4 )
hframes = 7
script = SubResource( 8 )
__meta__ = {
"_edit_group_": true
}

[node name="Area2D" type="Area2D" parent="target"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="target/Area2D"]
shape = SubResource( 9 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="target" groups=[
"mg_anim",
]]
autoplay = "d"
anims/d = SubResource( 10 )
anims/explode = SubResource( 11 )

[node name="CPUParticles2D" type="CPUParticles2D" parent="target"]
emitting = false
amount = 2
lifetime = 0.6
one_shot = true
randomness = 1.0
emission_shape = 1
emission_sphere_radius = 8.0
spread = 180.0
gravity = Vector2( 0, -40 )
initial_velocity_random = 0.5
scale_amount = 2.0
color_ramp = SubResource( 12 )
anim_speed = 0.1
anim_speed_random = 0.3
anim_offset = 0.2
anim_offset_random = 0.5

[node name="AnimationPlayer" type="AnimationPlayer" parent="." groups=[
"mg_anim",
]]
autoplay = "d"
anims/d = SubResource( 13 )
anims/reveal = SubResource( 14 )

[node name="Pee" type="Sprite" parent="."]
editor/display_folded = true
position = Vector2( -16, -32 )
texture = ExtResource( 5 )
hframes = 2
script = SubResource( 6 )
__meta__ = {
"_edit_group_": true
}

[node name="Area2D" type="Area2D" parent="Pee" groups=[
"pee",
]]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Pee/Area2D"]
shape = SubResource( 7 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Pee" groups=[
"mg_anim",
]]
autoplay = "d"
anims/d = SubResource( 15 )

[node name="StaticBody2D" type="StaticBody2D" parent="." groups=[
"floor",
]]
editor/display_folded = true
position = Vector2( 37, 104 )
scale = Vector2( 24, 5 )
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( 8, 8 )
shape = SubResource( 16 )

[node name="TargetArea" type="ReferenceRect" parent="."]
margin_left = 49.5
margin_top = 26.0
margin_right = 132.5
margin_bottom = 90.0

[node name="PSpawner" type="Position2D" parent="."]
position = Vector2( -88, 92.8672 )

[node name="PSpawnPoint" type="Position2D" parent="PSpawner"]
position = Vector2( 82, 0 )
